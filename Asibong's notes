{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMpBmU+GQ7oBuuZ7G0WZO15",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Asibong01/Asibong/blob/main/Asibong's%20notes\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "8-fGWffVdFUj"
      },
      "outputs": [],
      "source": [
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from google.colab import drive\n",
        "drive.mount('/content/drive')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Z0khUjHWdLtc",
        "outputId": "3f4916d1-fe8d-49c7-d3f4-3d31fa95e589"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.read_excel (\"/content/drive/MyDrive/DATASETS FOR ML LABS/happiness_updated 5 .xlsx\")"
      ],
      "metadata": {
        "id": "Ov1qK2eudQyP"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gDKhMjdvdhlC",
        "outputId": "79086010-37aa-4e64-df43-1ce466199b11"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 1487 entries, 0 to 1486\n",
            "Data columns (total 12 columns):\n",
            " #   Column                  Non-Null Count  Dtype  \n",
            "---  ------                  --------------  -----  \n",
            " 0   Country                 1487 non-null   object \n",
            " 1   year                    1487 non-null   int64  \n",
            " 2   Life_Ladder             1487 non-null   float64\n",
            " 3   Log_GDP_per_capita      1487 non-null   float64\n",
            " 4   Social_Support          1487 non-null   float64\n",
            " 5   Health_at_Birth         1487 non-null   float64\n",
            " 6   Freedom_to_Choose       1487 non-null   float64\n",
            " 7   Generosity              1487 non-null   float64\n",
            " 8   Perceptions_Corruption  1487 non-null   float64\n",
            " 9   Positive_Affect         1487 non-null   float64\n",
            " 10  Negative_Affect         1487 non-null   float64\n",
            " 11  Happiness_Score         1487 non-null   float64\n",
            "dtypes: float64(10), int64(1), object(1)\n",
            "memory usage: 139.5+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print(len(df),\"\\n\")\n",
        "print(df.shape,\"\\n\")\n",
        "print(df.index,\"\\n\")\n",
        "print(df.columns,\"\\n\")\n",
        "print(df.info(),\"\\n\")\n",
        "print(df.count(),\"\\n\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZbqnUSyndn2Q",
        "outputId": "257f5947-639a-4f27-d85d-f4e8ef5e57eb"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "1487 \n",
            "\n",
            "(1487, 12) \n",
            "\n",
            "RangeIndex(start=0, stop=1487, step=1) \n",
            "\n",
            "Index(['Country', 'year', 'Life_Ladder', 'Log_GDP_per_capita',\n",
            "       'Social_Support', 'Health_at_Birth', 'Freedom_to_Choose', 'Generosity',\n",
            "       'Perceptions_Corruption', 'Positive_Affect', 'Negative_Affect',\n",
            "       'Happiness_Score'],\n",
            "      dtype='object') \n",
            "\n",
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 1487 entries, 0 to 1486\n",
            "Data columns (total 12 columns):\n",
            " #   Column                  Non-Null Count  Dtype  \n",
            "---  ------                  --------------  -----  \n",
            " 0   Country                 1487 non-null   object \n",
            " 1   year                    1487 non-null   int64  \n",
            " 2   Life_Ladder             1487 non-null   float64\n",
            " 3   Log_GDP_per_capita      1487 non-null   float64\n",
            " 4   Social_Support          1487 non-null   float64\n",
            " 5   Health_at_Birth         1487 non-null   float64\n",
            " 6   Freedom_to_Choose       1487 non-null   float64\n",
            " 7   Generosity              1487 non-null   float64\n",
            " 8   Perceptions_Corruption  1487 non-null   float64\n",
            " 9   Positive_Affect         1487 non-null   float64\n",
            " 10  Negative_Affect         1487 non-null   float64\n",
            " 11  Happiness_Score         1487 non-null   float64\n",
            "dtypes: float64(10), int64(1), object(1)\n",
            "memory usage: 139.5+ KB\n",
            "None \n",
            "\n",
            "Country                   1487\n",
            "year                      1487\n",
            "Life_Ladder               1487\n",
            "Log_GDP_per_capita        1487\n",
            "Social_Support            1487\n",
            "Health_at_Birth           1487\n",
            "Freedom_to_Choose         1487\n",
            "Generosity                1487\n",
            "Perceptions_Corruption    1487\n",
            "Positive_Affect           1487\n",
            "Negative_Affect           1487\n",
            "Happiness_Score           1487\n",
            "dtype: int64 \n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 226
        },
        "id": "Ut0LQbegdxxh",
        "outputId": "160676f3-874f-4ae4-8411-1ebbdaf912bd"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "       Country  year  Life_Ladder  Log_GDP_per_capita  Social_Support  \\\n",
              "0  Afghanistan  2012     3.782938            7.660506        0.520637   \n",
              "1  Afghanistan  2013     3.572100            7.680333        0.483552   \n",
              "2  Afghanistan  2014     3.130896            7.670638        0.525568   \n",
              "3  Afghanistan  2015     3.982855            7.653833        0.528597   \n",
              "4  Afghanistan  2016     4.220169            7.650370        0.559072   \n",
              "\n",
              "   Health_at_Birth  Freedom_to_Choose  Generosity  Perceptions_Corruption  \\\n",
              "0        51.700001           0.530935    0.237588                0.775620   \n",
              "1        52.000000           0.577955    0.062666                0.823204   \n",
              "2        52.299999           0.508514    0.105755                0.871242   \n",
              "3        52.599998           0.388928    0.081652                0.880638   \n",
              "4        52.924999           0.522566    0.043916                0.793246   \n",
              "\n",
              "   Positive_Affect  Negative_Affect  Happiness_Score  \n",
              "0         0.613513         0.267919             4.26  \n",
              "1         0.547417         0.273328             3.36  \n",
              "2         0.491641         0.374861             3.30  \n",
              "3         0.491410         0.339276             3.58  \n",
              "4         0.501409         0.348332             3.36  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-78033d54-d8ee-488c-9b14-fd97382c06a6\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Country</th>\n",
              "      <th>year</th>\n",
              "      <th>Life_Ladder</th>\n",
              "      <th>Log_GDP_per_capita</th>\n",
              "      <th>Social_Support</th>\n",
              "      <th>Health_at_Birth</th>\n",
              "      <th>Freedom_to_Choose</th>\n",
              "      <th>Generosity</th>\n",
              "      <th>Perceptions_Corruption</th>\n",
              "      <th>Positive_Affect</th>\n",
              "      <th>Negative_Affect</th>\n",
              "      <th>Happiness_Score</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>2012</td>\n",
              "      <td>3.782938</td>\n",
              "      <td>7.660506</td>\n",
              "      <td>0.520637</td>\n",
              "      <td>51.700001</td>\n",
              "      <td>0.530935</td>\n",
              "      <td>0.237588</td>\n",
              "      <td>0.775620</td>\n",
              "      <td>0.613513</td>\n",
              "      <td>0.267919</td>\n",
              "      <td>4.26</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>2013</td>\n",
              "      <td>3.572100</td>\n",
              "      <td>7.680333</td>\n",
              "      <td>0.483552</td>\n",
              "      <td>52.000000</td>\n",
              "      <td>0.577955</td>\n",
              "      <td>0.062666</td>\n",
              "      <td>0.823204</td>\n",
              "      <td>0.547417</td>\n",
              "      <td>0.273328</td>\n",
              "      <td>3.36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>2014</td>\n",
              "      <td>3.130896</td>\n",
              "      <td>7.670638</td>\n",
              "      <td>0.525568</td>\n",
              "      <td>52.299999</td>\n",
              "      <td>0.508514</td>\n",
              "      <td>0.105755</td>\n",
              "      <td>0.871242</td>\n",
              "      <td>0.491641</td>\n",
              "      <td>0.374861</td>\n",
              "      <td>3.30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>2015</td>\n",
              "      <td>3.982855</td>\n",
              "      <td>7.653833</td>\n",
              "      <td>0.528597</td>\n",
              "      <td>52.599998</td>\n",
              "      <td>0.388928</td>\n",
              "      <td>0.081652</td>\n",
              "      <td>0.880638</td>\n",
              "      <td>0.491410</td>\n",
              "      <td>0.339276</td>\n",
              "      <td>3.58</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Afghanistan</td>\n",
              "      <td>2016</td>\n",
              "      <td>4.220169</td>\n",
              "      <td>7.650370</td>\n",
              "      <td>0.559072</td>\n",
              "      <td>52.924999</td>\n",
              "      <td>0.522566</td>\n",
              "      <td>0.043916</td>\n",
              "      <td>0.793246</td>\n",
              "      <td>0.501409</td>\n",
              "      <td>0.348332</td>\n",
              "      <td>3.36</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-78033d54-d8ee-488c-9b14-fd97382c06a6')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-78033d54-d8ee-488c-9b14-fd97382c06a6 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-78033d54-d8ee-488c-9b14-fd97382c06a6');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-890ac9ef-1658-44e6-b7f4-6190f78adda6\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-890ac9ef-1658-44e6-b7f4-6190f78adda6')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-890ac9ef-1658-44e6-b7f4-6190f78adda6 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 1487,\n  \"fields\": [\n    {\n      \"column\": \"Country\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 161,\n        \"samples\": [\n          \"Niger\",\n          \"Norway\",\n          \"Tanzania\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 3,\n        \"min\": 2012,\n        \"max\": 2022,\n        \"num_unique_values\": 11,\n        \"samples\": [\n          2017,\n          2012,\n          2022\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Life_Ladder\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1358389734761056,\n        \"min\": 1.28127110004425,\n        \"max\": 7.88934993743896,\n        \"num_unique_values\": 1487,\n        \"samples\": [\n          6.02215147018433,\n          5.46234178543091,\n          6.6562066078186\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Log_GDP_per_capita\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1416085670087919,\n        \"min\": 5.52672338485718,\n        \"max\": 11.6637878417969,\n        \"num_unique_values\": 1473,\n        \"samples\": [\n          10.0055303573608,\n          10.0549297332764,\n          11.1433620452881\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Social_Support\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.12091177040641748,\n        \"min\": 0.228217229247093,\n        \"max\": 0.987343490123749,\n        \"num_unique_values\": 1483,\n        \"samples\": [\n          0.576823055744171,\n          0.877504527568817,\n          0.911904811859131\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Health_at_Birth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 6.232739875878031,\n        \"min\": 38.6399993896484,\n        \"max\": 74.4749984741211,\n        \"num_unique_values\": 810,\n        \"samples\": [\n          51.9000015258789,\n          65.9400024414062,\n          68.4749984741211\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Freedom_to_Choose\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.13051175503014514,\n        \"min\": 0.303540408611298,\n        \"max\": 0.985177755355835,\n        \"num_unique_values\": 1468,\n        \"samples\": [\n          0.752731323242187,\n          0.841188073158264,\n          0.781794965267181\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Generosity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1583229267053154,\n        \"min\": -0.337526559829712,\n        \"max\": 0.702707886695862,\n        \"num_unique_values\": 1455,\n        \"samples\": [\n          0.00866161193698645,\n          -0.0678649842739105,\n          0.361245095729828\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Perceptions_Corruption\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.17984501269090555,\n        \"min\": 0.0473111532628536,\n        \"max\": 0.976339638233185,\n        \"num_unique_values\": 1403,\n        \"samples\": [\n          0.824472486972809,\n          0.643578767776489,\n          0.583472728729248\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Positive_Affect\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.1049581981065793,\n        \"min\": 0.17888580262661,\n        \"max\": 0.883586406707764,\n        \"num_unique_values\": 1476,\n        \"samples\": [\n          0.677459180355072,\n          0.642387509346008,\n          0.77587366104126\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Negative_Affect\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.08963849477862329,\n        \"min\": 0.0827369540929794,\n        \"max\": 0.704589664936066,\n        \"num_unique_values\": 1479,\n        \"samples\": [\n          0.175512179732323,\n          0.348332315683365,\n          0.289976716041565\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Happiness_Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1.1668235872907435,\n        \"min\": 0.0,\n        \"max\": 7.91,\n        \"num_unique_values\": 387,\n        \"samples\": [\n          5.65,\n          6.58,\n          6.64\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 21
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 320
        },
        "id": "LBk6uOvmd5uk",
        "outputId": "c83053da-8bfd-457f-8cc0-013ae9499acf"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              year  Life_Ladder  Log_GDP_per_capita  Social_Support  \\\n",
              "count  1487.000000  1487.000000         1487.000000     1487.000000   \n",
              "mean   2016.816409     5.492837            9.440900        0.808156   \n",
              "std       3.092874     1.135839            1.141609        0.120912   \n",
              "min    2012.000000     1.281271            5.526723        0.228217   \n",
              "25%    2014.000000     4.646750            8.552745        0.741005   \n",
              "50%    2017.000000     5.501249            9.537121        0.831625   \n",
              "75%    2019.000000     6.321120           10.404873        0.904665   \n",
              "max    2022.000000     7.889350           11.663788        0.987343   \n",
              "\n",
              "       Health_at_Birth  Freedom_to_Choose   Generosity  \\\n",
              "count      1487.000000        1487.000000  1487.000000   \n",
              "mean         63.924211           0.765422     0.000477   \n",
              "std           6.232740           0.130512     0.158323   \n",
              "min          38.639999           0.303540    -0.337527   \n",
              "25%          59.900002           0.688679    -0.112003   \n",
              "50%          65.279999           0.780773    -0.017416   \n",
              "75%          68.750000           0.869643     0.091096   \n",
              "max          74.474998           0.985178     0.702708   \n",
              "\n",
              "       Perceptions_Corruption  Positive_Affect  Negative_Affect  \\\n",
              "count             1487.000000      1487.000000      1487.000000   \n",
              "mean                 0.736880         0.653807         0.282944   \n",
              "std                  0.179845         0.104958         0.089638   \n",
              "min                  0.047311         0.178886         0.082737   \n",
              "25%                  0.691094         0.577149         0.215024   \n",
              "50%                  0.782501         0.663063         0.274197   \n",
              "75%                  0.857473         0.736446         0.337032   \n",
              "max                  0.976340         0.883586         0.704590   \n",
              "\n",
              "       Happiness_Score  \n",
              "count      1487.000000  \n",
              "mean          5.147683  \n",
              "std           1.166824  \n",
              "min           0.000000  \n",
              "25%           4.095000  \n",
              "50%           4.950000  \n",
              "75%           6.000000  \n",
              "max           7.910000  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6eed8c10-a2ac-4e1f-b9e5-db5fc2bdaf1e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>year</th>\n",
              "      <th>Life_Ladder</th>\n",
              "      <th>Log_GDP_per_capita</th>\n",
              "      <th>Social_Support</th>\n",
              "      <th>Health_at_Birth</th>\n",
              "      <th>Freedom_to_Choose</th>\n",
              "      <th>Generosity</th>\n",
              "      <th>Perceptions_Corruption</th>\n",
              "      <th>Positive_Affect</th>\n",
              "      <th>Negative_Affect</th>\n",
              "      <th>Happiness_Score</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>count</th>\n",
              "      <td>1487.000000</td>\n",
              "      <td>1487.000000</td>\n",
              "      <td>1487.000000</td>\n",
              "      <td>1487.000000</td>\n",
              "      <td>1487.000000</td>\n",
              "      <td>1487.000000</td>\n",
              "      <td>1487.000000</td>\n",
              "      <td>1487.000000</td>\n",
              "      <td>1487.000000</td>\n",
              "      <td>1487.000000</td>\n",
              "      <td>1487.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>mean</th>\n",
              "      <td>2016.816409</td>\n",
              "      <td>5.492837</td>\n",
              "      <td>9.440900</td>\n",
              "      <td>0.808156</td>\n",
              "      <td>63.924211</td>\n",
              "      <td>0.765422</td>\n",
              "      <td>0.000477</td>\n",
              "      <td>0.736880</td>\n",
              "      <td>0.653807</td>\n",
              "      <td>0.282944</td>\n",
              "      <td>5.147683</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>std</th>\n",
              "      <td>3.092874</td>\n",
              "      <td>1.135839</td>\n",
              "      <td>1.141609</td>\n",
              "      <td>0.120912</td>\n",
              "      <td>6.232740</td>\n",
              "      <td>0.130512</td>\n",
              "      <td>0.158323</td>\n",
              "      <td>0.179845</td>\n",
              "      <td>0.104958</td>\n",
              "      <td>0.089638</td>\n",
              "      <td>1.166824</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>min</th>\n",
              "      <td>2012.000000</td>\n",
              "      <td>1.281271</td>\n",
              "      <td>5.526723</td>\n",
              "      <td>0.228217</td>\n",
              "      <td>38.639999</td>\n",
              "      <td>0.303540</td>\n",
              "      <td>-0.337527</td>\n",
              "      <td>0.047311</td>\n",
              "      <td>0.178886</td>\n",
              "      <td>0.082737</td>\n",
              "      <td>0.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25%</th>\n",
              "      <td>2014.000000</td>\n",
              "      <td>4.646750</td>\n",
              "      <td>8.552745</td>\n",
              "      <td>0.741005</td>\n",
              "      <td>59.900002</td>\n",
              "      <td>0.688679</td>\n",
              "      <td>-0.112003</td>\n",
              "      <td>0.691094</td>\n",
              "      <td>0.577149</td>\n",
              "      <td>0.215024</td>\n",
              "      <td>4.095000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50%</th>\n",
              "      <td>2017.000000</td>\n",
              "      <td>5.501249</td>\n",
              "      <td>9.537121</td>\n",
              "      <td>0.831625</td>\n",
              "      <td>65.279999</td>\n",
              "      <td>0.780773</td>\n",
              "      <td>-0.017416</td>\n",
              "      <td>0.782501</td>\n",
              "      <td>0.663063</td>\n",
              "      <td>0.274197</td>\n",
              "      <td>4.950000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>75%</th>\n",
              "      <td>2019.000000</td>\n",
              "      <td>6.321120</td>\n",
              "      <td>10.404873</td>\n",
              "      <td>0.904665</td>\n",
              "      <td>68.750000</td>\n",
              "      <td>0.869643</td>\n",
              "      <td>0.091096</td>\n",
              "      <td>0.857473</td>\n",
              "      <td>0.736446</td>\n",
              "      <td>0.337032</td>\n",
              "      <td>6.000000</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>max</th>\n",
              "      <td>2022.000000</td>\n",
              "      <td>7.889350</td>\n",
              "      <td>11.663788</td>\n",
              "      <td>0.987343</td>\n",
              "      <td>74.474998</td>\n",
              "      <td>0.985178</td>\n",
              "      <td>0.702708</td>\n",
              "      <td>0.976340</td>\n",
              "      <td>0.883586</td>\n",
              "      <td>0.704590</td>\n",
              "      <td>7.910000</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6eed8c10-a2ac-4e1f-b9e5-db5fc2bdaf1e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-6eed8c10-a2ac-4e1f-b9e5-db5fc2bdaf1e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-6eed8c10-a2ac-4e1f-b9e5-db5fc2bdaf1e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-913bce96-ae9b-4855-ac14-d1d3abac8ddd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-913bce96-ae9b-4855-ac14-d1d3abac8ddd')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-913bce96-ae9b-4855-ac14-d1d3abac8ddd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 709.8389255930952,\n        \"min\": 3.0928737201602474,\n        \"max\": 2022.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2016.8164088769333,\n          2017.0,\n          1487.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Life_Ladder\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 524.1093251003921,\n        \"min\": 1.1358389734761056,\n        \"max\": 1487.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5.492836855289354,\n          5.50124883651733,\n          1487.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Log_GDP_per_capita\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 522.9024722154687,\n        \"min\": 1.1416085670087919,\n        \"max\": 1487.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          9.440900223422226,\n          9.5371208190918,\n          1487.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Social_Support\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 525.5005448529159,\n        \"min\": 0.12091177040641748,\n        \"max\": 1487.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.8081561463045127,\n          0.831624925136566,\n          1487.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Health_at_Birth\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 507.16349357135704,\n        \"min\": 6.232739875878031,\n        \"max\": 1487.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          63.924210523860594,\n          65.2799987792969,\n          1487.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Freedom_to_Choose\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 525.5054872229305,\n        \"min\": 0.13051175503014514,\n        \"max\": 1487.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.7654222601378775,\n          0.780773103237152,\n          1487.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Generosity\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 525.7094465962928,\n        \"min\": -0.337526559829712,\n        \"max\": 1487.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.00047740147643811944,\n          -0.0174156725406647,\n          1487.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Perceptions_Corruption\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 525.5182532319496,\n        \"min\": 0.0473111532628536,\n        \"max\": 1487.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.7368798095193299,\n          0.782501220703125,\n          1487.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Positive_Affect\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 525.5421378936063,\n        \"min\": 0.1049581981065793,\n        \"max\": 1487.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.6538072843455435,\n          0.663062751293182,\n          1487.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Negative_Affect\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 525.6336111873558,\n        \"min\": 0.0827369540929794,\n        \"max\": 1487.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.28294358321841967,\n          0.274197161197662,\n          1487.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Happiness_Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 524.2617322854728,\n        \"min\": 0.0,\n        \"max\": 1487.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          5.147683254875588,\n          4.95,\n          1487.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 22
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.describe().transpose()"
      ],
      "metadata": {
        "id": "O55dpkJZeBgd"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df.mean()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "2M44xddpeJQ1",
        "outputId": "625841a2-a994-4e32-e9aa-c4bffbfd9f5e"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-9-c61f0c8f89b5>:1: FutureWarning: The default value of numeric_only in DataFrame.mean is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.\n",
            "  df.mean()\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "year                      2016.816409\n",
              "Life_Ladder                  5.492837\n",
              "Log_GDP_per_capita           9.440900\n",
              "Social_Support               0.808156\n",
              "Health_at_Birth             63.924211\n",
              "Freedom_to_Choose            0.765422\n",
              "Generosity                   0.000477\n",
              "Perceptions_Corruption       0.736880\n",
              "Positive_Affect              0.653807\n",
              "Negative_Affect              0.282944\n",
              "Happiness_Score              4.095212\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.skew()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "eazmGAuWeR5N",
        "outputId": "a957c47c-de88-42c1-dce3-47d92926c535"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-10-9e0b1e29546f>:1: FutureWarning: The default value of numeric_only in DataFrame.skew is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.\n",
            "  df.skew()\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "year                      0.064214\n",
              "Life_Ladder              -0.146579\n",
              "Log_GDP_per_capita       -0.381970\n",
              "Social_Support           -0.996793\n",
              "Health_at_Birth          -0.675754\n",
              "Freedom_to_Choose        -0.723666\n",
              "Generosity                0.869081\n",
              "Perceptions_Corruption   -1.525556\n",
              "Positive_Affect          -0.540392\n",
              "Negative_Affect           0.689988\n",
              "Happiness_Score          -0.661424\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 10
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.kurtosis()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wUwM5gl8eay_",
        "outputId": "3779a69a-3faf-43d6-d35e-4b3d4fc42819"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "<ipython-input-11-c7edf97eb14c>:1: FutureWarning: The default value of numeric_only in DataFrame.kurt is deprecated. In a future version, it will default to False. In addition, specifying 'numeric_only=None' is deprecated. Select only valid columns or specify the value of numeric_only to silence this warning.\n",
            "  df.kurtosis()\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "year                     -1.156258\n",
              "Life_Ladder              -0.504872\n",
              "Log_GDP_per_capita       -0.682566\n",
              "Social_Support            0.695468\n",
              "Health_at_Birth          -0.239651\n",
              "Freedom_to_Choose         0.093916\n",
              "Generosity                1.280182\n",
              "Perceptions_Corruption    2.002224\n",
              "Positive_Affect           0.155565\n",
              "Negative_Affect           0.675455\n",
              "Happiness_Score          -1.041974\n",
              "dtype: float64"
            ]
          },
          "metadata": {},
          "execution_count": 11
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.plot.box()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 447
        },
        "id": "qu6p9fxwew5q",
        "outputId": "0a4b3760-853a-41ea-9bb2-45ebce8d3501"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "metadata": {},
          "execution_count": 12
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.plot.box(vert=False);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 430
        },
        "id": "rbs-_VDlez_N",
        "outputId": "ade762d7-849c-41d5-850c-ce7bd03f1329"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.plot.scatter(x='Social_Support',y='Freedom_to_Choose')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 467
        },
        "id": "vkYPvZekfJcq",
        "outputId": "2cb637c7-4c6d-4e8d-b4d8-7eeea4ac3643"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Social_Support', ylabel='Freedom_to_Choose'>"
            ]
          },
          "metadata": {},
          "execution_count": 14
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.plot.scatter(x='Generosity',y='Perceptions_Corruption')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 466
        },
        "id": "8HIVuTCKznxK",
        "outputId": "ab405dd1-6d6a-4e5c-933c-9b38457b0b18"
      },
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<Axes: xlabel='Generosity', ylabel='Perceptions_Corruption'>"
            ]
          },
          "metadata": {},
          "execution_count": 15
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "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\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}